# Config options
# ** History **
setopt EXTENDED_HISTORY       # save timestamp and duration
setopt HIST_VERIFY            # make a newline show the change before executing it
setopt HIST_IGNORE_SPACE      # ignore lines which start with space
setopt HIST_IGNORE_DUPS       # ignore duplicates
setopt HIST_FIND_NO_DUPS      # do not display duplicates of a found line
setopt HIST_REDUCE_BLANKS     # trim extra blanks from history lines
setopt INC_APPEND_HISTORY     # incremental append, don't wait until shell exit
# setopt SHARE_HISTORY        # share history between zsh processes
setopt HIST_NO_FUNCTIONS      # skip function definitions

# ** Shell behavior **
setopt AUTOCD                 # cd just by typing the name of a directory
setopt AUTOPUSHD              # flip between two places easily
setopt PUSHD_IGNORE_DUPS      # don't push multiple copies of the same dir onto the stack
setopt PUSHD_SILENT           # don't print the directory stack after pushd or popd
setopt PUSHD_TO_HOME          # pushd with no arguments gets you to Kansas
setopt PUSHD_MINUS            # swaps `+` and `-` when used w/a number to specify a dir in the stack
setopt NO_CLOBBER             # avoid overwriting files. Use ! to confirm
setopt INTERACTIVE_COMMENTS   # allow inline comments
setopt COMPLETE_IN_WORD       # complete from the cursor onwards
setopt ALWAYS_TO_END          # move the cursor to the end of the word after completion
setopt BEEP                   # beep when no results are available
# setopt NOMATCH              # print an error when a pattern has no matches (default behavior)
setopt CSH_NULL_GLOB          # error message when pattern fails. Null glob otherwise.
setopt EXTENDED_GLOB          # expand globbing
setopt COMPLETE_ALIASES       # autocompletion for aliases' switches
setopt NO_FLOW_CONTROL        # disable Ctrl + q / Ctrl + s flow control. Similar to `stty -ixon`

setopt PROMPT_SUBST           # command substitution, parameter and arithmetic expansion

unsetopt MENU_COMPLETE        # insert the first match immediately
setopt AUTO_MENU              # show menu for completion. Disable MENU_COMPLETE

# Keep 10,000 lines of history within the shell and save it to ~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
HISTFILE=~/.zsh_history

# Show elapsed time if a command takes longer than 10s
REPORTTIME=10

# load zmv function
autoload -U zmv

# use modern completion system. Run in native mode
autoload -Uz compinit && compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*' use-cache true
# remove the trailing slash when using a directory as argument
zstyle ':completion:*' squeeze-slashes true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
# zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

# OS X config @see:
#+ https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/ps.1.html
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,state,cputime,ucomm'

# Set your default EDITOR tool
# replace with nano, vim, Emacs etc.
export EDITOR='subl -w'

# Key binds
# use emacs keybindings even if EDITOR is set to vi
bindkey -e

# this will bind CTRL + back/forward arrows navigation
# bindkey ";5D" backward-word
# bindkey ";5C" forward-word

# OS X-specific config
bindkey '[C' forward-word
bindkey '[D' backward-word

# Type some chars, use the UP-DOWN keys to filter history
# bindkey '\e[A' history-beginning-search-backward
# bindkey '\e[B' history-beginning-search-forward

# Alternate bindings for `history-substring-search` function
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

bindkey '^Q' push-line-or-edit

bindkey ' ' magic-space

# Alias definitions.
# You may want to put all your additions into a separate file like
# '~/.zsh_aliases' instead of adding them here directly.
if [ -f ~/.zsh_aliases ]; then
    . ~/.zsh_aliases
fi

# Helper functions.
if [ -f ~/.zsh_funcs ]; then
    . ~/.zsh_funcs
fi

# Load the prompt.
if [ -f ~/.zsh_prompt ]; then
    . ~/.zsh_prompt
fi

# zsh syntax highlightning:
#   https://github.com/zsh-users/zsh-syntax-highlighting
if [ -d /usr/local/share/zsh-syntax-highlighting ]; then
    . /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# history substring search
#   Called after syntax-highlightning so we can use both
if [ -d /usr/local/opt/zsh-history-substring-search ]; then
    . /usr/local/opt/zsh-history-substring-search/zsh-history-substring-search.zsh
fi

# zsh completions:
#   https://github.com/zsh-users/zsh-completions
# You might need to rebuild zcompdump:
#   rm -f ~/.zcompdump; compinit
if [ -d /usr/local/share/zsh-completions ]; then
  fpath=(/usr/local/share/zsh-completions $fpath)
fi


# EOF
